[x] Use one controller for all crud services
[x] Add cmd & batch methods 
[x] Add cmd rights
[x] add before, after & error hooks
[x] make sur to pass ctx for datadog trace tracking 
[x] check cannot default throw (CASL)
[x] batch wait for flush
[x] add inheritance argument
[x] VALIDATION
[x] Check CMD method, get non cached user for cmd
[x] crudQuery Validation

[ ] test QueryPatch (or queryPut behavior)

[x] security test with null query, null data etc..

[x] security test default fields option

[x] rename crudService methods to $
[x] test nested validation & transform
[x] replace maxSize with per field decorator value
[x] patch many

[ ] log service
[ ] test token refresh 

[ ] test populate authorizations

[x] check nested entities are not exposed
[x] test create limits
[x] options tests
[x] replace all entityManager calls in test for ms testing (.fork())
[x] test cmd forward to other ms
[x] test maxItemsInDb
[x] test account & emails (user service methods)
[x] 2fa tests
[x] cli generate cmds
[x] move defineCMDAbility
[x] change controller route (:service) & proxy request
[x] third party auth client part

---

[x] csrf token
[ ] add a way to rotate JWT/ms-link key 

[x] error hooks test
[x] add typing for can && cannot function
[ ] global @$Hook (transform) decorator?
[x] throw specific error if user already exist for account_creation
[ ] saveBatch (one flush) alternative to patchBatch? 

[ ] test cmd dto == any
[X] cmd get (allow cmd get = false)
[x] don't check csrf on get requests
[X] cmd hook - (controller)
[x] tests for GET cmd

[ ] tests for Array.isArray(entity[this.crudConfig.id_field]) -> makeIds
[x] tests for "Batch must be an array"

[x] setup codeQL workflow conditions
[x] pass full orm to CRUDService config (not just entity manager)
